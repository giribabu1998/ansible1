Shell: Shell is an interpreter that provide you an interface to e
xecute commands. The default shell used by RHEL is bash (bourne again shell).
There are different shells available:
bsh: bourne shell
tsh: turbo shell
csh: cshell
ksh: korn shell.
bash: broune again shell.
Note: bash is having automatic command completion by using tab key.
Kenrel: Kernel is a core operating system program. Kenerl is only one which interacts with kernel. Kernel is storned in /boo directori and its name start with vmlinuz-itsVersionReleaseNumber. You can see the same with uname -r command.

The linux command syntax:
		$command optin(s) argument(s)
Options always starts with - symbol.

hostname: used to print the server name
	    server or machine or host or computer are same.

ls : used to list files or directories in the given directory
ls  -l : list files or directories in long list format.
Any file that starts with . is hidden. To see hidden files, use ls -l -a (-a option will list hidden files or directories)

logname: prints login name of the user

whoami : print the login name of the user

who or w: print currently logged in users

uname: pints the OS name
such as OS, Kernel version, Architecture etc.,
uname -r : print the kernel version.

uname -a : print all the system attributes
echo: echo command is used to print some text on the screen

file command:- used to print the file type.
ex:- file FileName.

ex:- echo "TextToPrint"
or   ech -e "TexttoPrint"
      -e : enhanced mode

cal : print the calender of the current month

cal year : prints the all months calender of the given year
ex:- cal 2022

cal month year : print the calender of the given month of the given years
ex:- cal 06 2022
exit or Ctrl-d or logout: used to exit the shell

wc: word count
syntax: wc [options] filename
	 	-w : number of words
		-c : number of characters
		-l : number of lines
example: wc -l xyz.txt
pwd: print working directory
tty : print your psedo terminal slave device path. ie your terminal number.
ex:- tty
passwd:- used to change the pasword 
Syntax:- 

 	passwd 
	or
	passwd username
ex:-
	passwd oradmin
        Note:- if no username is specified, the passwd command assumes to change password of currently logged in user (ie self password). root user can change password of any other user. 

write : write command is used write data to another logged in user.
ex:- write username
     and type the data. End the conversaton with ctr-d. ctrl-d refers to End of File (EOF).

wall: write all. The message is sent to all the currently logged in users.
ex:- wall "Text to broadcast"

Note: You can disable mesg, so that you will not receive write or wall commad message. To do this use the below command:
      mesg n 
      the above line will disable message to No.
      mesg y
      the above will turn on the mesg
      To see the status of mesg:
      mesg
      the above will pring mesg y or mesg n. y means yes and n means no.
cat command:- Used to print the content of the file. Cat is short form for concatenation
Synatx:- cat file1 [ file2 file3 ... ]

tail command:-
-------------
prints last few lines of the file (by default 10 lines)
Syntax:-
	tail /etc/passwd
	or
	tail -20 /etc/passwd	
	the above command prints last 20 lines of the file.
	or
	tail -f /path/to/file
	ex:- 
	tail -f /var/log/messages 
	The above command will print last 10 line, wait continuously for the file updates, and if any, they were printed.

head command:-
-------------
prints first few line of the file (by defualt 10 lines )
Synatax:- head /etc/passwd
	or	
	head -20 /etc/passwd
	the above command prints first 20 lines of the file
more command:-
-------------
More command prints the file page by page. Enterkey will scrol down one line, and space bar scrols up one page at a time.
syntax:- more filename
	or
	 more filename1 filename2
Use space bar or f or d to scrol down. And b for scroll up. Enter key will scrol down line.

date command:-
------------
ex:-  date
Tue May  2 21:51:41 IST 2017
Day Month Date HH:MM:SS TimeZone YYYY

Date command with formatted output:-
----------------------------------

a) date '+ %h'

Date command arguments:-
a = Mon
A = Monday
b or h  = Jan
B = January
c = Complete date format; Tue 02 May 2017 10:04:54 PM IST
C = Century; ex:- 20
d = date; ex:- 02
m = Month; ex:- 05 for May
y = Year Short form; ex:- 17
Y = Year Full form ex:- 2017
Example:- %C%y will print 2017
H = Hour
M = Minute
S = Seconds
%n = New Line

Please refer date --help for more info.
Create an empty file:-
--------------------
Syntax:- touch fileName
         ex:- touch sfile1.txt


Create a directory:-
--------------------
Syntax:- mkdir DirName
         ex:- mkdir Sample1
Verify with ls -l (long list) if the directory is created

Changing Directory using cd command:-
Syntax:- cd DirctoryName
	ex:- cd Sample1
             verify with pwd command (print working directory)
1)Any file that starts with . is a hidden files and can only listed with -a flags with ls command.
2) . refers to current directory and .. refers to the parent directory.
3)A home directory is directory where the user get as current working directory upon login.
4)Simply use cd command to enter into user's home directory. You can also use cd ~ to enter into user's home directory.

Creating multiple directories with mkdir command:-
--------------------------------------------------
For example if you want to create direcdtory structure as below:

/home/sanjeevi/dir1/dir2/dir3/dir4 then you can use below two methods.

Assuming my pwd is /home/sanjeevi.
  mkdir dir1
      cd dir1
         mkdir dir2
            cd dir2
               mkdir dir3
                     cd dir3
                         mkdir dir4
To achieve the above in a single step:
mkdir -p dir1/dir2/dir3/dir4

The -p flag with mkdir command will create all intermediate directories if they are missing.

Removig Directory:-
-----------------
rmdir DirectoryName
or
rmdir /Path/to/Directory
or 
rmdir -p /Path/of/directories
where -p progressive, ie all intermediate directories are removed, provided they are empty.
You can only remove empty directory.
filesystem:- The heirarchical arrangement of directories and files known as filesystem.
Path:- 
 i)The path of a file or directory specifies its unique file system location.
ii)Followinga file path tranverses one or more named subdirectories, separated by a forward slash(/), until destination is reached.
iii)Directories contain other files and other subdirectories.
 iv)The path can be represented in two ways a) absolute or full path b) relative path.
  v)An absolute path is a fully qualified name, specifiying the files exact location in the file system heirachy. It begins at the root (/) directory and specifies each subdirectory that must be traversed to reach the specific file.
 vi)Absolute path names can be long to type, so files may also be located relative to the current working directory for your shell prompt known as relative path. A relative path identifies a unique file, specifying only the path necessary to reach the file from the working directory. Any path name other than a forward slash as the first character is a relative path name. 

touch command:- used create an empty file if it doesnt exists. if the file exists, then its modifcation timestamp is updated without modifying its content.
syntax:- touch [options] file1 [file2 file3 .... ]
removing file:-
--------------
rm command is used to delete a file. Syntax:- rm filename
					  or
					      rm -i filename
					  or
					      rm -f filename
						where -i : interactive
						      -f : force
You can use rm command to delete directories using -r flag (where -r refers to recursive). This delete files, subdirectories and the directory itself.
			ex :- rm -r dir1
			      all files and multilevel directories with dir1 and dir1 itself with be deleted.
